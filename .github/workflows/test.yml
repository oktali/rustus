name: TMP test

on:
  pull_request:

permissions:
  contents: write
  packages: write

jobs:
  publish:
    name: Building ${{ matrix.platform.target }}
    runs-on: ${{ matrix.platform.runs-on }}
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-20.04
            target: x86_64-unknown-linux-musl
          - os-name: Linux-aarch64
            runs-on: ubuntu-20.04
            target: aarch64-unknown-linux-musl
          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install cargo-bump
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-bump
      - name: Update version
        run: cargo-bump bump "1.0.0"
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
      - name: Install build-essentials
        if: ${{ contains(matrix.platform.os-name, 'Linux') }}
        run: apt update -y && apt install -y build-essential
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: ${{ matrix.platform.target }}
          strip: true
        env:
          JEMALLOC_SYS_WITH_MALLOC_CONF: "background_thread:true,metadata_thp:auto,tcache:false,dirty_decay_ms:30000,muzzy_decay_ms:30000,abort_conf:true"
      - name: Zip artifcats (based os)
        if: ${{ 'windows-latest' != matrix.platform.runs-on }}
        run: zip -j "rustus-${{ matrix.platform.os-name }}.zip" "target/${{ matrix.platform.target }}/release/rustus"
      - name: Zip artifacts (mental illness)
        if: ${{ 'windows-latest' == matrix.platform.runs-on }}
        run: Compress-Archive -LiteralPath "target\${{ matrix.platform.target }}\release\rustus.exe" -DestinationPath "rustus-${{ matrix.platform.os-name }}.zip"

